<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- userService Bean , 配置spring文件 -->
<!--    <bean id="userService" class="cn.hzebin.ioc.demo1.UserServiceImpl">-->
        <!--添加属性（依赖注入）-->
<!--        <property name="name" value="HuangZebin"></property>-->
<!--    </bean>-->

    <!--Bean实例化的三种方式==================================================-->
    <!--1.采用无参数的构造方法的方式-->
<!--    <bean id="bean1" class="cn.hzebin.ioc.demo2.Bean1"></bean>-->
    <!--2.静态工厂的方式,因为是静态方法，所以可以用类.方法直接使用-->
<!--    <bean id="bean2" class="cn.hzebin.ioc.demo2.Bean2Factory" factory-method="createBean2"></bean>-->
    <!--3.实例工厂的方式-->
<!--    <bean id="bean3Factory" class="cn.hzebin.ioc.demo2.Bean3Factory"></bean>-->
<!--    <bean id="bean3" factory-bean="bean3Factory" factory-method="createBean3"></bean>-->

    <!--Bean的作用域==========================================================-->
<!--    <bean id="person" class="cn.hzebin.ioc.demo3.Person"></bean>-->
<!--    <bean id="person" class="cn.hzebin.ioc.demo3.Person" scope="prototype"></bean>  多例（例子：action多例）-->
<!--    <bean id="person" class="cn.hzebin.ioc.demo3.Person" scope="singleton"></bean>  单例-->

<!--    <bean id="man" class="cn.hzebin.ioc.demo3.Man" init-method="setup" destroy-method="teardown">-->
<!--        <property name="name" value="黄泽彬"></property>-->
<!--    </bean>-->
<!--    <bean class="cn.hzebin.ioc.demo3.MyBeanPostProcessor"></bean>-->

<!--    <bean id="userDao" class="cn.hzebin.ioc.demo3_1.UserDaoImpl"></bean>-->

    <!--Spring的属性注入=======================================================-->
    <!--构造方法注入-->
    <bean id="user" class="cn.hzebin.ioc.demo4.User">
        <constructor-arg name="name" value="黄泽彬"></constructor-arg>
        <constructor-arg name="age" value="22"></constructor-arg>
    </bean>

    <!--set方法注入-->
    <bean id="person" class="cn.hzebin.ioc.demo4.Person">
        <property name="name" value="熊君"></property>
        <property name="age" value="22"></property>
        <property name="cat" ref="cat"></property>  <!--注入对象  ref为引用下面的bean的id-->
    </bean>
    <bean id="cat" class="cn.hzebin.ioc.demo4.Cat"></bean>

    <!--Bean的p名称空间的属性注入-->

    <!--Bean的SpEL注入方式属性注入-->
    <bean id="category" class="cn.hzebin.ioc.demo4.Category">
        <property name="name" value="#{'服装'}"></property>
    </bean>
    <bean id="productInfo" class="cn.hzebin.ioc.demo4.ProductInfo"></bean>
    <bean id="product" class="cn.hzebin.ioc.demo4.Product">
        <property name="name" value="#{'裤子'}"></property>
<!--        <property name="price" value="#{299}"></property>  下面采用调用方法的方式-->
        <property name="price" value="#{productInfo.calculatePrice()}"></property>
        <property name="category" value="#{category}"></property>
    </bean>

    <!--复杂（集合）类型的属性注入-->
    <bean id="collectionBean" class="cn.hzebin.ioc.demo5.CollectionBean">
        <!--数组类型-->
        <property name="arrs">
            <list>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </list>
        </property>
        <!--list类型-->
        <property name="list">
            <list>
                <value>111</value>
                <value>222</value>
                <value>333</value>
            </list>
        </property>
        <!--set类型-->
        <property name="set">
            <set>
                <value>ddd</value>
                <value>eee</value>
                <value>fff</value>
            </set>
        </property>
        <!--Map集合的属性注入-->
        <property name="map">
            <map>
                <entry key="aaa" value="111"></entry>
                <entry key="bbb" value="222"></entry>
                <entry key="ccc" value="333"></entry>
            </map>
        </property>
        <!--properties属性注入-->
        <property name="properties">
            <props>
                <prop key="username">root</prop>
                <prop key="password">root1234</prop>
            </props>
        </property>
    </bean>
</beans>